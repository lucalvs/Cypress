{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 1,
    "pending": 0,
    "failures": 0,
    "start": "2021-01-04T06:28:32.702Z",
    "end": "2021-01-04T06:28:50.707Z",
    "duration": 18005,
    "testsRegistered": 1,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "ae5439f0-51f7-4c96-8a65-71ecf35b5822",
      "title": "",
      "fullFile": "cypress/integration/compra.spec.js",
      "file": "cypress/integration/compra.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "5f470d2d-2dde-4e25-978b-eb4d7cf56d27",
          "title": "Compra",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Efetuar uma compra de produto",
              "fullTitle": "Compra Efetuar uma compra de produto",
              "timedOut": null,
              "duration": 17938,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.backgroundLogin(); // http://automationpractice.com/index.php\ncy.visit('/');\nvar nomeProduto = 'Faded Short Sleeve T-shirts';\ncy.contains(nomeProduto).trigger('mouseover');\ncy.contains(nomeProduto).parent() //Elemento pai h5\n.siblings('div.button-container') //irmão do elemento h5\n.children('a') //filhos do elemento container\n.first() //opção dentre o elemento 'add to cart' ou 'more'\n.click(); //clicar com o botão do mouse;\n// Validando se o produto foi adicionado ao carrinho com sucesso\ncy.get('.icon-ok').parent() //h2\n.should('contain.text', 'Product successfully added to your shopping cart');\ncy.get('span#layer_cart_product_title').should('contain.text', nomeProduto); //cy.pause() //Pausa o projeto até o momento das atuais asserções\ncy.get('.button-container a[href$=\"controller=order\"]').click();\ncy.get('.cart_navigation a[href$=\"order&step=1\"]').click();\n/* Loga dentro do código\n \ncy.get('#email').type('testes@testes.com')\ncy.get('#passwd').type('testes123')  \ncy.get('button#SubmitLogin').click()  */\n// Validando se o endereço de entrega é igual o de cobrança\n// [type=checkbox]#adressesAreEquals\n// Teremos 3 parâmetros: tipo asserção | Atributo | valor\ncy.get('[type=checkbox]#addressesAreEquals').should('have.attr', 'checked', 'checked'); //cy.pause()\ncy.get('button[name=processAddress]').click();\ncy.get('[type=checkbox]#cgv').check();\ncy.get('button[name=processCarrier]').click();\ncy.get('.bankwire').click();\ncy.get('.cart_navigation button[type=submit]').find('span').contains('I confirm my order').click();\ncy.get('div p.cheque-indent strong').should('contain.text', 'Your order on My Store is complete.'); //expect - Forma de asserção explicita\n//should - Forma de asserção implicita\n// 1. capturando text do box e filtrando dentro do texto\ncy.get('div.box').invoke('text').then(function (text) {\n  console.log(text); //1.1 filtrando o Regex\n  console.log(text.match(/[A-Z][A-Z]+/g)[1]); //1.2 Escrevendo arquivo com o Id do pedido encontrado\n  //parametro: Caminho do arquivo(sempre a partir do root) | Conteúdo do Arquivo\n  cy.writeFile('cypress/fixtures/idCompra.json', {\n    id: \"\".concat(text.match(/[A-Z][A-Z]+/g)[1])\n  }); //navega até a tela de orders\n  cy.get('.button-exclusive').click(); //1.3 Faz leitura de um arquivo e obtém o Id do pedido armazenado\n  cy.readFile('cypress/fixtures/idCompra.json').then(function (idCompra) {\n    cy.get('tr.first_item td.history_link a').should('contain.text', idCompra.id);\n  });\n});",
              "err": {},
              "uuid": "c2cc5e3e-d02b-4ede-a0c6-28eee34e880d",
              "parentUUID": "5f470d2d-2dde-4e25-978b-eb4d7cf56d27",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c2cc5e3e-d02b-4ede-a0c6-28eee34e880d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 17938,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": true,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.2.1"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "mochawesome-report",
        "quiet": true,
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "5.1.0"
    }
  }
}